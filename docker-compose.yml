x-user: &user
  user: "${UID}:${GID}"
x-default: &deafult-env
  TZ: Asia/Bangkok
x-postgres: &postgres-env
  POSTGRES_USER: "${DB_USER}"
  POSTGRES_PASSWORD: "${DB_PASSWORD}"
x-app-env: &app-env
  NODE_ENV: "${NODE_ENV}"
  TOKEN_SECRET: "${TOKEN_SECRET}"
x-backend-env: &backend-env
  DB_USER: "${DB_USER}"
  DB_HOST: "${DB_HOST}"
  DB_NAME: "${DB_NAME}"
  DB_PASSWORD: "${DB_PASSWORD}"
  DB_PORT: ${DB_PORT}
x-frontend-env: &frontend-env
  NUXT_BASE_API_URL: "${NUXT_BASE_API_URL}"
  NUXT_TOKEN_API: "${NUXT_TOKEN_API}"

services:
  backend:
    depends_on:
      - postgres
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      <<: [*deafult-env, *app-env, *backend-env]
    volumes:
      - ./backend/uploads:/app/uploads
    ports:
      - 8090:8090

  frontend:
    depends_on:
      - backend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      <<: [*deafult-env, *app-env, *frontend-env]
    ports:
      - 3000:3000

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      <<: [*deafult-env, *postgres-env]
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
